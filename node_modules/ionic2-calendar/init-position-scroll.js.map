{"version":3,"file":"init-position-scroll.js","sourceRoot":"","sources":["../src/init-position-scroll.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,UAAU,EAAiB,MAAM,eAAe,CAAC;;IAUjD,+CAAM;IAUnD,qCAAY,EAAa;QAAzB,YACI,iBAAO,SAEV;yBAVoB,IAAI,YAAY,EAAU;iCAKZ,KAAK;QAIpC,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;;KACrB;IAED,iDAAW,GAAX,UAAY,OAAqB;QAC7B,IAAI,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;QAC3C,EAAE,CAAC,CAAC,YAAY,IAAI,YAAY,CAAC,YAAY,KAAK,SAAS,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YAChF,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,YAAY,CAAC,YAAY,CAAC;SAC5D;KACJ;IAED,qDAAe,GAAf;QACI,IAAM,aAAa,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;QACvG,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,KAAK,SAAS,CAAC,CAAC,CAAC;YAClC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;SAC/C;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC3C,IAAI,UAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC7B,IAAI,CAAC,OAAO,GAAG;gBACX,UAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;aAC1C,CAAC;YACF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,aAAa,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SAC1D;KACJ;IAED,iDAAW,GAAX;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SAClE;KACJ;;gBAlDJ,SAAS,SAAC;oBACP,QAAQ,EAAE,sBAAsB;oBAChC,QAAQ,EAAE,kJAIT;iBACJ;;;gBATgD,UAAU;;;iCAWtD,KAAK;8BACL,KAAK;6BACL,MAAM;;sCAdX;EAWiD,MAAM;SAA1C,2BAA2B","sourcesContent":["import { Scroll } from 'ionic-angular';\nimport { Component, Input, Output, EventEmitter, ElementRef, SimpleChanges } from '@angular/core';\n\n@Component({\n    selector: 'init-position-scroll',\n    template: `\n        <ion-scroll scrollY=\"true\" zoom=\"false\" style=\"height:100%\">\n            <ng-content></ng-content>\n        </ion-scroll>\n    `\n})\nexport class initPositionScrollComponent extends Scroll {\n    @Input() initPosition:number;\n    @Input() emitEvent:boolean;\n    @Output() onScroll = new EventEmitter<number>();\n\n    private element:ElementRef;\n    private scrollContent:HTMLElement;\n    private handler:()=>void;\n    private listenerAttached:boolean = false;\n\n    constructor(el:ElementRef) {\n        super();\n        this.element = el;\n    }\n\n    ngOnChanges(changes:SimpleChanges) {\n        let initPosition = changes['initPosition'];\n        if (initPosition && initPosition.currentValue !== undefined && this.scrollContent) {\n            this.scrollContent.scrollTop = initPosition.currentValue;\n        }\n    }\n\n    ngAfterViewInit() {\n        const scrollContent = this.scrollContent = this.element.nativeElement.querySelector('.scroll-content');\n        if (this.initPosition !== undefined) {\n            scrollContent.scrollTop = this.initPosition;\n        }\n\n        if (this.emitEvent && !this.listenerAttached) {\n            let onScroll = this.onScroll;\n            this.handler = function () {\n                onScroll.emit(scrollContent.scrollTop);\n            };\n            this.listenerAttached = true;\n            scrollContent.addEventListener('scroll', this.handler);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.listenerAttached) {\n            this.scrollContent.removeEventListener('scroll', this.handler);\n        }\n    }\n}\n"]}