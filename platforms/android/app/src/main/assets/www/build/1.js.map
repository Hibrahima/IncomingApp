{"version":3,"sources":["../../src/pages/show-tasks/show-tasks.module.ts","../../src/pages/show-tasks/show-tasks.ts"],"names":[],"mappings":"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","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ShowTasksPage } from './show-tasks';\n\n@NgModule({\n  declarations: [\n    ShowTasksPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ShowTasksPage),\n  ],\n})\nexport class ShowTasksPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/show-tasks/show-tasks.module.ts","import { Component } from '@angular/core';\nimport {IonicPage, NavController, NavParams} from 'ionic-angular';\nimport {TasksService} from \"../../providers/tasks-service/tasks-service\";\nimport {Task} from '../../models/Tasks';\nimport { AlertController } from 'ionic-angular';\n\n@IonicPage()\n@Component({\n  selector: 'page-show-tasks',\n  templateUrl: 'show-tasks.html',\n})\nexport class ShowTasksPage {\n\n    allTasks: any[] = [];\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private taskService: TasksService, private alertCtrl: AlertController) {\n      this.getTasksByScope();\n\n  }\n\n  ionViewDidLoad() {\n\n  }\n\n  getTasksByScope(){\n      let scope = this.navParams.data.scope;\n      this.taskService.getTasksByScope(scope).then((data) =>{\n          this.allTasks = data;\n          this.allTasks.sort(this.sortTasks);\n      });\n        this.allTasks = [];\n  }\n\n  sortTasks(task1: Task, task2: Task){\n      return task1.priority - task2.priority;\n  }\n\n  showSingleTask(id: number){\n    this.navCtrl.push(\"ShowSingleTaskPage\", {id: id});\n  }\n\n  deleteTask(task: Task){\n      this.presentDeleteAlert(task);\n  }\n\n  updateTaskStatus(task: Task){\n      this.presentUpdateTaskStatusAlert(task);\n  }\n\n  updateTask(task: Task){\n   this.navCtrl.push(\"UpdateSingleTaskPage\", {task: task});\n  }\n\n  refresh(){\n      this.getTasksByScope();\n  }\n\n  PullToRefresh(refresher){\n    this.getTasksByScope();\n    refresher.complete();\n  }\n\n  presentDeleteAlert(task) {\n        let alert = this.alertCtrl.create({\n            title: 'Confirm deletion',\n            message: 'Are you sure, you want to delete this task?',\n            buttons: [\n                {\n                    text: 'Cancel',\n                    role: 'cancel',\n                    handler: () => {\n                    }\n                },\n                {\n                    text: 'Delete',\n                    handler: () => {\n                        this.taskService.deleteTask(task);\n                        this.refresh();\n                        this.presentBasicAlert(\"Task deleted\", \"The tasl has been successfully deleted\");\n                    }\n                }\n            ]\n        });\n        alert.present();\n  }\n\n  presentUpdateTaskStatusAlert(task) {\n      let taskStatus = (task.status == 0) ? 1 : 0;\n      let message = (taskStatus == 0) ? \"The task will be marked as incomplete, do you confirm the task status change?\" : \"The task will be marked as complete, do you confirm the task status change?\";\n      let buttonText = (taskStatus == 0) ? \"Mark as incomplete\" : \"Mark as complete\";\n      let alert = this.alertCtrl.create({\n          title: \"Confirm task status change\",\n          message: message,\n          buttons: [\n              {\n                  text: 'Cancel',\n                  role: 'cancel',\n                  handler: () => {\n                      this.refresh();\n                  }\n              },\n\n              {\n                    text: buttonText,\n                    handler: () => {\n                        this.taskService.updateTaskStatus(task);\n                        this.refresh();\n                        this.presentBasicAlert(\"Task status updated\", \"The status of the task has been updated.\")\n                    }\n              }\n            ]\n        });\n        alert.present();\n  }\n\n  presentBasicAlert(title: string, message: string) {\n        let alert = this.alertCtrl.create({\n            title: title,\n            subTitle: message,\n            buttons: ['Dismiss']\n        });\n        alert.present();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/show-tasks/show-tasks.ts"],"sourceRoot":""}