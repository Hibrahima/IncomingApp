{"version":3,"sources":["../../src/pages/update-single-task/update-single-task.module.ts","../../src/pages/update-single-task/update-single-task.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { UpdateSingleTaskPage } from './update-single-task';\n\n@NgModule({\n  declarations: [\n    UpdateSingleTaskPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(UpdateSingleTaskPage),\n  ],\n})\nexport class UpdateSingleTaskPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/update-single-task/update-single-task.module.ts","import { Component } from '@angular/core';\nimport {AlertController, IonicPage, NavController, NavParams} from 'ionic-angular';\nimport {Task} from '../../models/Tasks';\nimport {TasksService} from \"../../providers/tasks-service/tasks-service\";\n\n@IonicPage()\n@Component({\n  selector: 'page-update-single-task',\n  templateUrl: 'update-single-task.html',\n})\nexport class UpdateSingleTaskPage {\n\n  scopes: any[] = [];\n  statuses: any[] = [];\n  priorites: any[] = [];\n  requirednessArray: any[] = [];\n  model: Task;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private taskService: TasksService,\n              private alertCtrl: AlertController) {\n    this.model = this.navParams.data.task;\n  }\n\n  ionViewDidLoad() {\n    this.buildViewElements();\n  }\n\n  buildViewElements(){\n   this.scopes = [\n        {\n          value: \"before\",\n            text: \"Before\"\n        },\n        {\n          value: \"during\",\n            text: \"During\"\n\n        },\n        {\n          value: \"after\",\n          text: \"After\"\n\n        }\n    ];\n\n    this.statuses = [\n        {\n          value: 0,\n          text: \"Incomplete\"\n        },\n        {\n          value: 1,\n          text: \"Complete\"\n\n        }\n    ];\n\n    for(let i=1; i<=5; i++){\n      this.priorites.push(i);\n    }\n\n    this.requirednessArray = [\"mandatory\", \"not mandatory\", \"mandatory for non EU\"];\n  }\n\n  updateTask(){\n      this.presentUpdateTaskAlert();\n  }\n\n\n  presentUpdateTaskAlert() {\n        let alert = this.alertCtrl.create({\n            title: \"Confirm task update\",\n            message: 'This task will be updated according to the provided information',\n            buttons: [\n                {\n                    text: 'Cancel',\n                    role: 'cancel',\n                    handler: () => {\n                        this.navCtrl.pop();\n                    }\n                },\n\n                {\n                    text: \"Update\",\n                    handler: () => {\n                        this.taskService.updateTask(this.model);\n                        this.presentBasicAlert(\"Task status updated\", \"The status of the task has been updated.\");\n                        this.navCtrl.pop();\n                    }\n                }\n            ]\n        });\n        alert.present();\n  }\n\n\n  presentBasicAlert(title: string, message: string) {\n        let alert = this.alertCtrl.create({\n            title: title,\n            subTitle: message,\n            buttons: ['Dismiss']\n        });\n        alert.present();\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/update-single-task/update-single-task.ts"],"sourceRoot":""}