{"version":3,"sources":["../../src/providers/tasks-service/tasks-service.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/notifications/notifications.ts","../../src/pages/settings/settings.ts","../../src/pages/events/events.ts","../../src/pages/lectures/lectures.ts","../../src/pages/tasks/tasks.ts","../../src/pages/home/home.ts","../../src/models/Tasks.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/database/database.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Task} from '../../models/Tasks';\n\n//Database layer\nimport { SQLiteObject } from '@ionic-native/sqlite';\nimport {DatabaseProvider} from '../database/database';\n/*\n  Generated class for the TasksServiceProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class TasksService {\n\n    private tableName = \"tasks\";\n\n  constructor(private dbProvider: DatabaseProvider) {\n    console.log('Hello TasksServiceProvider Provider');\n  }\n\n\n\n  public addPredefindedTasks(){\n        //name:string, deadline:Date, scope: string, status: boolean, description: string, priority: number, reqiiredness: string\n      let task1 = new Task().createSimpleTask(\"Fill out appication form\", \"15/02/2018\", \"before\", 0, \"Connect to the registration server and fill out the application form\", 1,  \"mandatory\");\n      let task2 =  new Task().createSimpleTask(\"Apply for accomodation\", new Date(), \"before\", 0, \"Use the information that you received from the receiving institution or the International Office (RIO) to contact accomdation services\", 2,  \"mandatory or optional\");\n      let task3: Task =  new Task().createSimpleTask(\"Get health insurance\", new Date(), \"during\", 0, \"Get a valid student health insurance that covers your entire stay. Note This is not mandatory for EU students.\", 1,  \"mandatory or optional\");\n      let task4: Task =  new Task().createSimpleTask(\"Registration with the city\", new Date(), \"during\", 0, \"Contact the university or the RIO or your student4studnt buddy to help you in registering with the city. Note: A rental contract is needed for this step.\", 2,  \"mandatory\");\n      let task5: Task =  new Task().createSimpleTask(\"Cancellation of your city registartion\", new Date(), \"after\", 0, \"Contact the city registration office to cancel your registration. Note: This is a very very crucial step.\", 1,  \"mandatory\");\n      let task6: Task =  new Task().createSimpleTask(\"Cancel your rental contract\", new Date(), \"after\", 0, \"Contact your accomdation service for canceling your rental contract explicitly\", 2,  \"mandatory\");\n\n        //Adding tasks\n      this.addTask(task1);\n      this.addTask(task2);\n      this.addTask(task3);\n      this.addTask(task4);\n      this.addTask(task5);\n      this.addTask(task6);\n      console.log(\"Predefinded tasks were credated.\");\n  }\n\n\n  public addTask(task: Task){\n      this.dbProvider.getDB()\n          .then((db: SQLiteObject) => {\n              //name:string, deadline:Date, scope: string, status: boolean, description: string, priority: number, reqiiredness: string\n              let sql = 'insert into '+this.tableName+'(name, deadline, scope, status, description, priority, requiredness) values (?, ?, ?, ?, ?, ?, ?)';\n              let data = [task.name, task.deadline, task.scope, task.status, task.description, task.priority, task.requiredness];\n             // let sql = 'insert into tasks_3 (name, deadline, scope, status) values(?, ?, ?, ?)';\n              //let data = [\"name\", \"deadline\", \"scope\", \"status\"];\n              return db.executeSql(sql, data)\n                  .catch((e) => console.error(e));\n          })\n          .catch((e) => console.error(e));\n  }\n\n  public getTaskById(id: number) {\n      return this.dbProvider.getDB()\n          .then((db: SQLiteObject) => {\n              let sql = 'select * from '+this.tableName+' where id = ?';\n              let data = [id];\n\n              return db.executeSql(sql, data)\n                  .then((data: any) => {\n                      if (data.rows.length > 0) {\n                          let item = data.rows.item(0);\n                          let task = new Task();\n                          task.id = item.id;\n                          task.name = item.name;\n                          task.deadline = item.deadline;\n                          task.scope = item.scope;\n                          task.status = item.status;\n                          task.description = item.description;\n                          console.log(\"---------------------description \"+task.description)\n                          task.priority = item.priority;\n                          task.requiredness = item.requiredness;\n\n                            return task;\n                        }\n\n                        return null;\n                    })\n                    .catch((e) => console.error(e));\n            })\n            .catch((e) => console.error(e));\n  }\n\n  public getAllTasks(){\n      return this.dbProvider.getDB()\n          .then((db: SQLiteObject) => {\n              let sql = 'SELECT * from '+this.tableName;\n              var data: any[] = [];\n\n              return db.executeSql(sql, data)\n                  .then((data: any) => {\n                      if (data.rows.length > 0) {\n                          let tasks: any[] = [];\n                          for (var i = 0; i < data.rows.length; i++) {\n                              var task = data.rows.item(i);\n                              console.log(\"get all tasks task status type : \"+typeof task.status)\n                              tasks.push(task);\n                          }\n                          return tasks;\n                      } else {\n                          return [];\n                      }\n                  })\n                  .catch((e) => console.error(e));\n          })\n          .catch((e) => console.error(e));\n\n  }\n\n  public getTasksByScope(scope: string):any{\n      return this.getAllTasks().then((data: any) => {\n          console.log(\"get tasks by scope lenghth \"+data.length);\n           var tasks:Task[] = [];\n           for(var i=0; i<data.length; i++){\n               var currentTask = data[i];\n               console.log(\"---------------------------data[i].name : \"+currentTask.name);\n               if(currentTask.scope == scope)\n                   tasks.push(currentTask);\n           }\n\n           return tasks;\n      });\n  }\n\n\n  public updateTaskStatus(task: Task) {\n      return this.dbProvider.getDB()\n          .then((db: SQLiteObject) => {\n              let sql = 'update '+this.tableName+' set status = ? where id = ?';\n              console.log(\"task status  from the view : \"+task.status+\" task id : \"+task.id);\n              let taskStatus = (task.status == 0) ? 1 : 0;\n\n              console.log(\"*****************************NEW STATUS \"+taskStatus)\n              let data = [taskStatus, task.id];\n              return db.executeSql(sql, data).then((res) =>{\n                  console.log(\"update Task status : \"+res);\n              })\n                  .catch((e) => console.error(e));\n          })\n          .catch((e) => console.error(e));\n    }\n\n\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/tasks-service/tasks-service.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 111;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 111\n// module chunks = 2","var map = {\n\t\"../pages/show-single-task/show-single-task.module\": [\n\t\t278,\n\t\t1\n\t],\n\t\"../pages/show-tasks/show-tasks.module\": [\n\t\t279,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 152;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 152\n// module chunks = 2","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-notifications',\n  templateUrl: 'notifications.html'\n})\nexport class NotificationsPage {\n\n  constructor(public navCtrl: NavController) {\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/notifications/notifications.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-settings',\n  templateUrl: 'settings.html'\n})\nexport class SettingsPage {\n\n  constructor(public navCtrl: NavController) {\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-events',\n  templateUrl: 'events.html'\n})\nexport class EventsPage {\n\n  constructor(public navCtrl: NavController) {\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/events/events.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-lectures',\n  templateUrl: 'lectures.html'\n})\nexport class LecturesPage {\n\n  constructor(public navCtrl: NavController) {\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/lectures/lectures.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n//import {TasksService} from \"../../providers/tasks-service/tasks-service\";\nimport {ShowTasksPage} from \"../show-tasks/show-tasks\";\n\n\n\n@Component({\n  selector: 'page-tasks',\n  templateUrl: 'tasks.html'\n})\nexport class TasksPage {\n  beforeTasks: any[] = [];\n  duringTasks: any[] = [];\n  afterTasks: any[] = [];\n\n  /*constructor(public navCtrl: NavController, private taskService: TasksService) {\n  }*/\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n  /*addPageToNavController(pageName: string){\n    this.navCtrl.push(pageName);\n  }*/\n\n  showTasks(scope: string){\n    this.navCtrl.push(\"ShowTasksPage\", {scope:scope});\n\n  }\n/*\n  getDuringTasks(){\n    this.duringTasks = this.taskService.getTasksByScope(\"during\");\n     console.log(\"Durng tasks length \"+this.duringTasks.length);\n  }\n\n  getAfterTasks(){\n    this.afterTasks = this.taskService.getTasksByScope(\"after\");\n    console.log(\"After tasks length \"+this.afterTasks.length);\n  }\n*/\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tasks/tasks.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  constructor(public navCtrl: NavController) {\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","export class Task{\n    id: number;\n    name: string;\n    deadline: string;\n    scope: string; // before | during | after\n    status: number; // 0 = false = task not completed | 1 = true = task completed , false =\n    description: string;\n    priority: number; // prority of the task within the scope e.g 1, 2\n    requiredness: string; // mandatory (for EU) | optional (for EU)\n\n   /* constructor(name){\n        this._name = name;\n    }*/\n\n    constructor(){\n\n    }\n\n    public createSimpleTask(name, deadline, scope, status, description, priotity, requiredness){\n        let task = new Task();\n        task.name = name;\n        task.deadline = deadline;\n        task.scope = scope;\n        task.status = status;\n        task.description = description;\n        task.priority = priotity;\n        task.requiredness = requiredness;\n\n        return task;\n    }\n    /*constructor(name:string, deadline:string, scope: string, status: boolean, description: string, priority: number, requiredness: string ){\n        this.name = name;\n        this.deadline = deadline;\n        this.scope = scope;\n        this.status = status;\n        this.description = description;\n        this.priority = priority;\n        this.requiredness = requiredness;\n    }*/\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/Tasks.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { TasksPage } from '../pages/tasks/tasks';\nimport { LecturesPage } from '../pages/lectures/lectures';\nimport { EventsPage } from '../pages/events/events';\nimport { NotificationsPage } from '../pages/notifications/notifications';\nimport { SettingsPage } from '../pages/settings/settings';\n\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n//Database layer\nimport { SQLite } from '@ionic-native/sqlite'\nimport { DatabaseProvider } from '../providers/database/database';\nimport { TasksService } from '../providers/tasks-service/tasks-service';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    TasksPage,\n    LecturesPage,\n    EventsPage,\n    NotificationsPage,\n    SettingsPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    TasksPage,\n    LecturesPage,\n    EventsPage,\n    NotificationsPage,\n    SettingsPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n      SQLite,\n    DatabaseProvider,\n    TasksService\n  ]\n})\nexport class AppModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { Platform, Nav } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { NotificationsPage } from '../pages/notifications/notifications';\nimport { SettingsPage } from '../pages/settings/settings';\nimport { EventsPage } from '../pages/events/events';\nimport { LecturesPage } from '../pages/lectures/lectures';\nimport { TasksPage } from '../pages/tasks/tasks';\n\n\nimport { HomePage } from '../pages/home/home';\nimport {DatabaseProvider} from \"../providers/database/database\";\nimport {TasksService} from \"../providers/tasks-service/tasks-service\";\n\n\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  @ViewChild(Nav) navCtrl: Nav;\n    rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen, dbProvider: DatabaseProvider, taskService: TasksService) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n\n      //Create database\n      /*dbProvider.createDatabase().then(() =>{\n         console.log(\"Database successfully created!\");\n         taskService.getAllTasks().then((data:any) => {\n           if(data.length == 0)\n               taskService.addPredefindedTasks();\n         })\n\n      }).catch((e) =>{\n         console.log(\"Error while creating database main class\");\n      })*/\n    });\n  }\n  goToNotifications(params){\n    if (!params) params = {};\n    this.navCtrl.setRoot(NotificationsPage);\n  }\n  goToSettings(params){\n    if (!params) params = {};\n    this.navCtrl.setRoot(SettingsPage);\n  }\n  goToEvents(params){\n    if (!params) params = {};\n    this.navCtrl.setRoot(EventsPage);\n  }\n  goToLectures(params){\n    if (!params) params = {};\n    this.navCtrl.setRoot(LecturesPage);\n  }\n  goToTasks(params){\n    if (!params) params = {};\n    this.navCtrl.setRoot(TasksPage);\n  }\n  goToHome(params){\n    if (!params) params = {};\n    this.navCtrl.setRoot(HomePage);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite';\nimport {Task} from '../../models/Tasks';\nimport {TasksService} from '../tasks-service/tasks-service';\n/*\n  Generated class for the DatabaseProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class DatabaseProvider {\n\n  constructor(private sqlite: SQLite) {\n    console.log('Hello DatabaseProvider Provider');\n  }\n\n  // get the database instance\n  public getDB() {\n    return this.sqlite.create({\n        name: 'data.db',\n        location: 'default'\n    });\n  }\n\n  //create tables and insert predefinded data ===> tasks\n  public createDatabase() {\n    return this.getDB()\n        .then((db: SQLiteObject) => {\n            this.createTables(db);\n            console.log(\"----------------------------------haha\");\n        })\n        .catch(e => console.log(e));\n  }\n\n  private createTables(db: SQLiteObject) {\n      db.sqlBatch([\n          //name:string, deadline:Date, scope: string, status: boolean, description: string, priority: number, reqiiredness: string\n          ['CREATE TABLE IF NOT EXISTS tasks (id integer primary key AUTOINCREMENT NOT NULL, name TEXT NOT NULL, deadline TEXT NOT NULL, scope TEXT NOT NULL, status integer NOT NULL, description TEXT NOT NULL, priority integer NOT NULL, requiredness TEXT NOT NULL)'],\n          ['CREATE TABLE IF NOT EXISTS tasks_3 (id integer primary key AUTOINCREMENT NOT NULL, name TEXT NOT NULL, deadline TEXT NOT NULL, scope TEXT NOT NULL, status boolean NOT NULL)']\n      ]).then(() => console.log('Tasks table created'))\n          .catch(e => console.error('Error while creating tables', e));\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/database/database.ts"],"sourceRoot":""}